<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>io7m-jcanephora 0.53.1 Documentation: 3.4. JCGLArrayBuffersType</title><link rel="stylesheet" type="text/css" href="jstructural-2.0.0-layout.css"/><link rel="stylesheet" type="text/css" href="jstructural-2.0.0-colour.css"/><link rel="stylesheet" type="text/css" href="documentation.css"/></head><body><div class="st200_body"><div class="brand">
  <div class="brand_left">
    <a href="http://io7m.com/">io7m</a>
  </div>
  <div class="brand_right">
    <a href="http://github.com/io7m/jcanephora">io7m-jcanephora</a> 0.53.1
  </div>
</div><div class="st200_navbar st200_navbar_top"><table class="st200_navbar_table" summary="Navigation bar"><tr><td class="st200_navbar_prev_title_cell">3.3. JCGLContextType</td><td class="st200_navbar_up_title_cell">3. jcanephora Core Interfaces</td><td class="st200_navbar_next_title_cell">3.5. JCGLArrayObjectsType</td></tr><tr><td class="st200_navbar_prev_file_cell"><a href="p3s3.xhtml#st200_p3s3">Previous</a></td><td class="st200_navbar_up_file_cell"><a href="p3.xhtml#st200_p3">Up</a></td><td class="st200_navbar_next_file_cell"><a href="p3s5.xhtml#st200_p3s5">Next</a></td></tr></table><hr class="st200_hr"/></div><div class="st200_section_container"><div class="st200_section_title_number"><a id="st200_p3s4" href="#st200_p3s4">3.4</a></div><div class="st200_section_title">JCGLArrayBuffersType</div><ul class="st200_contents st200_section_contents_outer st200_section_contents"><li class="st200_contents_item st200_contents_item1 st200_contents_item_subsection"><a href="p3s4.xhtml#st200_p3s4ss1">3.4.1. Description</a></li><li class="st200_contents_item st200_contents_item1 st200_contents_item_subsection"><a href="p3s4.xhtml#st200_p3s4ss2">3.4.2. Usage examples</a></li><li class="st200_contents_item st200_contents_item1 st200_contents_item_subsection"><a href="p3s4.xhtml#st200_p3s4ss3">3.4.3. State</a></li></ul><div class="st200_subsection_container"><div class="st200_subsection_title_number"><a id="st200_p3s4ss1" href="#st200_p3s4ss1">3.4.1</a></div><div class="st200_subsection_title">Description</div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p3s4ss1pg1" href="#st200_p3s4ss1pg1">1</a></div><div class="st200_paragraph">
      The <a class="st200_link_external" href="apidocs/com/io7m/jcanephora/core/api/JCGLArrayBuffersType.html">JCGLArrayBuffersType</a>
      interface provides functions for allocating, updating,
      and using array buffers. It provides a typed interface
      to the <span class="st200_term function">glGenBuffers</span> and
      <span class="st200_term function">glBufferData</span> functions.
    </div></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p3s4ss1pg2" href="#st200_p3s4ss1pg2">2</a></div><div class="st200_paragraph">
      Array buffers are the basic storage type for vertex data used during rendering.
      The <span class="st200_term package">jcanephora</span> API uses the same
      model as the OpenGL 3.3 API: Buffers must be
      <span class="st200_term term">bound</span> before use, and at most
      one buffer of each type can be bound at any one time. The API
      currently exposes the following buffer types:
    </div></div><div class="st200_formal_item"><div class="st200_formal_item_title"><a id="st200_p3s4ss1fo1" href="#st200_p3s4ss1fo1">3.4.1.1. Buffer Types</a></div><ul class="st200_list_unordered"><li class="st200_list_item"><a class="st200_link_external" href="apidocs/com/io7m/jcanephora/core/api/JCGLArrayBuffersType.html">Array buffers</a></li><li class="st200_list_item"><a class="st200_link" href="p3s12.xhtml#st200_p3s12">Index buffers</a></li></ul></div></div><div class="st200_subsection_container"><div class="st200_subsection_title_number"><a id="st200_p3s4ss2" href="#st200_p3s4ss2">3.4.2</a></div><div class="st200_subsection_title">Usage examples</div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p3s4ss2pg1" href="#st200_p3s4ss2pg1">1</a></div><div class="st200_paragraph">
      To allocate a 128 byte array buffer, indicating to OpenGL
      that the contents of the buffer will be specified once and then
      used repeatedly for rendering:
    </div></div><div class="st200_formal_item"><div class="st200_formal_item_title"><a id="st200_p3s4ss2fo1" href="#st200_p3s4ss2fo1">3.4.2.1. Allocation</a></div><pre class="st200_verbatim">
JCGLArrayBuffersType g;

JCGLArrayBufferType a = g.arrayBufferAllocate(128, JCGLUsageHint.USAGE_STATIC_DRAW);
</pre></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p3s4ss2pg2" href="#st200_p3s4ss2pg2">2</a></div><div class="st200_paragraph">
      The buffer will remain bound after allocation. To update the
      contents of the buffer, an instance of
      <a class="st200_link_external" href="apidocs/com/io7m/jcanephora/core/JCGLBufferUpdateType.html">JCGLBufferUpdateType</a>
      must be created:
    </div></div><div class="st200_formal_item"><div class="st200_formal_item_title"><a id="st200_p3s4ss2fo2" href="#st200_p3s4ss2fo2">3.4.2.2. Updates</a></div><pre class="st200_verbatim">
JCGLArrayBuffersType g;
JCGLArrayBufferType a;

final JCGLBufferUpdateType&lt;JCGLArrayBufferType&gt; u =
  JCGLBufferUpdates.newUpdateReplacingAll(this.array_buffer);
final ByteBuffer b = u.getData();

for (int index = 0; index &lt; 128; ++index) {
  b.put(index, (byte) index);
}

g.arrayBufferUpdate(u);
g.arrayBufferUnbind();
</pre></div></div><div class="st200_subsection_container"><div class="st200_subsection_title_number"><a id="st200_p3s4ss3" href="#st200_p3s4ss3">3.4.3</a></div><div class="st200_subsection_title">State</div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p3s4ss3pg1" href="#st200_p3s4ss3pg1">1</a></div><div class="st200_paragraph">
      OpenGL specifies that at most one array buffer can be
      <span class="st200_term term">bound</span> on a context at any given time.
      Many API functions operate on the currently bound buffer and the
      <span class="st200_term package">jcanephora</span> API avoids changing
      the current binding behind the programmer's back.
    </div></div></div></div><div class="st200_navbar st200_navbar_bottom"><hr class="st200_hr"/><table class="st200_navbar_table" summary="Navigation bar"><tr><td class="st200_navbar_prev_file_cell"><a href="p3s3.xhtml#st200_p3s3">Previous</a></td><td class="st200_navbar_up_file_cell"><a href="p3.xhtml#st200_p3">Up</a></td><td class="st200_navbar_next_file_cell"><a href="p3s5.xhtml#st200_p3s5">Next</a></td></tr><tr><td class="st200_navbar_prev_title_cell">3.3. JCGLContextType</td><td class="st200_navbar_up_title_cell">3. jcanephora Core Interfaces</td><td class="st200_navbar_next_title_cell">3.5. JCGLArrayObjectsType</td></tr></table></div></div></body></html>
